name: Build and Deploy

on:
  push:
    branches:
      - main  # Trigger the workflow on push to the main branch
env:
  ARGOCD_REPOSITORY: 'argocd_repo'

jobs:
  build:
    runs-on: ubuntu-latest

    # defaults:
    #   run:
    #     working-directory: ./vault_demo  # Replace with the subdirectory if your project is not in the root

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '21'
      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.DOCKER_REGISTORY_TOKEN }}

      - uses: actions/cache@v4
        with:
          path: ~/.m2/repository
          key: maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            maven-

      - name: Build with Maven Wrapper and push the image to GitHub Container Registry
        run: ./mvnw clean package compile jib:build

      - name: Upload deployment manifest file generated in the build
        if: success()
        uses: actions/upload-artifact@v4
        with:
          name: build-artifact
          path: ${{ github.workspace }}/dekorate_k8s_output/*.yml  # Adjust the path to your generated YAML file

  deploy:
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Download build artifacts from the build job
        uses: actions/download-artifact@v4
        with:
          name: build-artifact
      - name: Read data
        run: cat ${{ github.workspace }}/kubernetes.yml
        
      - name: Checkout target repository --> ${{env.ARGOCD_REPOSITORY}}
        uses: actions/checkout@v4
        with:
          repository: Nikhil12894/${{env.ARGOCD_REPOSITORY}}  # Replace with the owner and name of the target repo
          path: ./${{env.ARGOCD_REPOSITORY}}
          ref: main
          token: ${{ secrets.PAT_TOKEN }}  # Use the personal access token for authentication

      - name: Copy artifacts to target repository
        run: |
          mkdir -p ${{ github.workspace }}/${{env.ARGOCD_REPOSITORY}}/${{ github.event.repository.name }}
          ls ${{ github.workspace }}/${{env.ARGOCD_REPOSITORY}}
          cp -f ${{ github.workspace }}/*.yml ./${{env.ARGOCD_REPOSITORY}}/${{ github.event.repository.name }}/${{ github.event.repository.name }}.yaml  # Adjust the path as needed

      - name: Configure Git
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"

      - name: Commit and push changes
        run: |
          cd ${{env.ARGOCD_REPOSITORY}}
          git add .
          git commit -m "Add/updated generated YAML file ${{ github.event.repository.name }} with run ${{github.run_number}}"
          git push
        env:
          GITHUB_TOKEN: ${{ secrets.PAT_TOKEN }}
